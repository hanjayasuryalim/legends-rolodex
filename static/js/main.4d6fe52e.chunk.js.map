{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/CardList.component.jsx","components/search-box/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","legend","id","alt","name","email","CardList","legends","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchLegend","target","value","state","fetch","then","response","json","users","this","filteredLegends","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAIaA,EAAO,SAACC,GACjB,OAAO,sBAAKC,UAAU,OAAf,UACH,qBAAKC,IAAG,+BAA0BF,EAAMG,OAAOC,GAAvC,0BAAmEC,IAAI,WAC/E,6BAAKL,EAAMG,OAAOG,OAClB,6BAAKN,EAAMG,OAAOI,YCFbC,G,MAAW,SAACR,GACtB,OAAO,qBAAKC,UAAU,YAAf,SACHD,EAAMS,QAAQC,KAAI,SAAAP,GAAM,OACvB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,WCJbO,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACnC,OAAO,uBAASC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCoCfG,G,wDAtCX,aAAe,IAAD,8BACV,gBAeJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAACC,aAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACVb,QAAQ,GACPU,aAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKT,SAAS,CAACT,QAAQkB,S,oBAQnC,WAAS,IAAD,EAE4BC,KAAKN,MAA9Bb,EAFH,EAEGA,QAASU,EAFZ,EAEYA,aACVU,EAAkBpB,EAAQqB,QAAO,SAAA3B,GAAM,OAC1CA,EAAOG,KAAKyB,cAAcC,SAASb,EAAaY,kBAGnD,OACI,sBAAK9B,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CAAWW,YAAY,gBACZC,aAAce,KAAKf,eAC9B,cAAC,EAAD,CAAUJ,QAASoB,W,GAjCjBI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d6fe52e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropType from 'prop-types';\n\nimport './Card.style.css';\nexport const Card = (props) => {\n    return <div className=\"card\">\n        <img src={`https://robohash.org/${props.legend.id}?set=set2&size=180x180`} alt=\"legend\"/>\n        <h3>{props.legend.name}</h3>\n        <h4>{props.legend.email}</h4>\n    </div>\n}\n\nCard.propTypes = {\n    legend:PropType.object\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport {Card} from \"../card/Card.component\";\n\nimport './CardList.style.css'\nexport const CardList = (props) => {\n   return <div className=\"card-list\">\n      {props.legends.map(legend =>\n        <Card key={legend.id} legend={legend}/>\n      )}\n   </div>\n}\n\nCardList.propTypes ={\n   legends:PropTypes.array\n};\n","import React from \"react\";\n\nimport './SearchBox.style.css'\nimport PropTypes from \"prop-types\";\n\nexport const SearchBox = ({placeholder,handleChange}) => {\n    return <input   type=\"search\"\n                    className=\"search\"\n                    placeholder={placeholder}\n                    onChange={handleChange}\n    />\n}\n\nSearchBox.propTypes = {\n    placeholder: PropTypes.string,\n    handleChange: PropTypes.func\n}\n","\nimport React,{ Component } from 'react';\nimport {CardList} from \"./components/card-list/CardList.component\";\nimport {SearchBox} from './components/search-box/SearchBox.component';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n           legends:[],\n            searchLegend:'',\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users => {\n                this.setState({legends:users});\n            })\n    }\n\n    handleChange = (e) => {\n        this.setState({searchLegend:e.target.value});\n    }\n\n    render(){\n\n        const {legends, searchLegend} = this.state;\n        const filteredLegends = legends.filter(legend =>\n           legend.name.toLowerCase().includes(searchLegend.toLowerCase())\n        )\n\n        return(\n            <div className=\"App\">\n                <h1>Legends Rolodex</h1>\n                <SearchBox placeholder=\"search legend\"\n                           handleChange={this.handleChange}/>\n                <CardList legends={filteredLegends}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}